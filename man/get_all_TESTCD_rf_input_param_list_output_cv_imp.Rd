% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_all_TESTCD_rf_param_list_output_cv_imp.R
\name{get_all_TESTCD_rf_input_param_list_output_cv_imp}
\alias{get_all_TESTCD_rf_input_param_list_output_cv_imp}
\title{Prepare and Evaluate Random Forest Model with Cross-Validation and Feature Importance}
\usage{
get_all_TESTCD_rf_input_param_list_output_cv_imp(
  path_db,
  rat_studies = FALSE,
  studyid_metadata,
  fake_study = FALSE,
  use_xpt_file = FALSE,
  all_lb_TESTCD_score = FALSE,
  Round = FALSE,
  Impute = FALSE,
  reps,
  holdback,
  Undersample = FALSE,
  hyperparameter_tuning = FALSE,
  error_correction_method,
  best.m = NULL,
  testReps,
  indeterminateUpper,
  indeterminateLower,
  Type,
  nTopImportance
)
}
\arguments{
\item{path_db}{A character string specifying the path to the SQLite database or directory containing the XPT file.}

\item{rat_studies}{A logical value indicating whether to filter for rat studies. Default is \code{FALSE}.}

\item{studyid_metadata}{A data frame containing metadata for the studies.}

\item{fake_study}{A logical value indicating whether to use fake study data. Default is \code{FALSE}.}

\item{use_xpt_file}{A logical value indicating whether to use XPT file data. Default is \code{FALSE}.}

\item{Round}{A logical value indicating whether to round the liver scores. Default is \code{FALSE}.}

\item{Impute}{A logical value indicating whether to impute missing values. Default is \code{FALSE}.}

\item{reps}{An integer specifying the number of repetitions for model evaluation.}

\item{holdback}{A numeric value specifying the proportion of data to hold back for validation.}

\item{Undersample}{A logical value indicating whether to undersample the data to balance classes. Default is \code{FALSE}.}

\item{hyperparameter_tuning}{A logical value indicating whether to tune the Random Forest model's hyperparameters. Default is \code{FALSE}.}

\item{error_correction_method}{A character string specifying the error correction method. Options are 'Flip', 'Prune', or 'None'.}

\item{best.m}{A numeric value specifying the number of trees in the Random Forest model. If \code{NULL}, the function determines this automatically.}

\item{testReps}{An integer specifying the number of test repetitions for model evaluation.}

\item{indeterminateUpper}{A numeric value for the upper threshold of indeterminate predictions.}

\item{indeterminateLower}{A numeric value for the lower threshold of indeterminate predictions.}

\item{Type}{A character string specifying the type of Random Forest model to use. Options include 'classification' or 'regression'.}

\item{nTopImportance}{An integer specifying the number of top important features to consider for the model.}
}
\value{
A list containing the trained Random Forest model, cross-validation results, and feature importance scores.
The list is returned by the \code{get_rf_model_with_cv} function.
}
\description{
This function prepares the data for training a Random Forest (RF) model with cross-validation, handles imputation, hyperparameter tuning, and evaluates the model's performance. It supports both real and fake study data, with options for rat studies, error correction, and feature importance selection.
}
\details{
The function performs the following steps:
\itemize{
\item Fetches the study data based on the specified parameters.
\item Calculates liver scores and harmonizes the data.
\item Prepares data for machine learning, including imputation and optional hyperparameter tuning.
\item Trains and evaluates the Random Forest model with cross-validation.
\item Applies error correction (if specified) and selects the most important features.
}
}
\examples{
\dontrun{
# Example usage of the function
result <- get_rf_input_param_list_output_cv_imp(
  path_db = "path/to/database",
  rat_studies = TRUE,
  studyid_metadata = metadata_df,
  fake_study = FALSE,
  use_xpt_file = FALSE,
  Round = TRUE,
  Impute = TRUE,
  reps = 10,
  holdback = 0.2,
  Undersample = TRUE,
  hyperparameter_tuning = TRUE,
  error_correction_method = "Flip",
  best.m = NULL,
  testReps = 5,
  indeterminateUpper = 0.9,
  indeterminateLower = 0.1,
  Type = "classification",
  nTopImportance = 10
)
}
}
