% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_prediction_plot.R
\name{get_prediction_plot}
\alias{get_prediction_plot}
\title{Generate Prediction Plot for Random Forest Model}
\usage{
get_prediction_plot(
  ml_formatted_scores_df = NULL,
  path_db,
  rat_studies = FALSE,
  studyid_metadata = NULL,
  fake_study = FALSE,
  use_xpt_file = FALSE,
  Round = FALSE,
  Impute = FALSE,
  reps,
  holdback,
  Undersample = FALSE,
  hyperparameter_tuning = FALSE,
  error_correction_method,
  best.m = best.m,
  testReps
)
}
\arguments{
\item{path_db}{A string indicating the path to the database that contains the dataset.}

\item{rat_studies}{A logical flag indicating whether to use rat studies data. Defaults to \code{FALSE}.}

\item{studyid_metadata}{A data frame containing metadata related to the study IDs. Defaults to \code{NULL}.}

\item{fake_study}{A logical flag indicating whether to use fake study data. Defaults to \code{FALSE}.}

\item{use_xpt_file}{A logical flag indicating whether to use an XPT file. Defaults to \code{FALSE}.}

\item{Round}{A logical flag indicating whether to round the predictions. Defaults to \code{FALSE}.}

\item{Impute}{A logical flag indicating whether to impute missing values. Defaults to \code{FALSE}.}

\item{reps}{An integer specifying the number of repetitions for cross-validation.}

\item{holdback}{A numeric value indicating the proportion of data to hold back for testing during cross-validation.}

\item{Undersample}{A logical flag indicating whether to perform undersampling on the dataset to balance the classes. Defaults to \code{FALSE}.}

\item{hyperparameter_tuning}{A logical flag indicating whether to perform hyperparameter tuning. Defaults to \code{FALSE}.}

\item{error_correction_method}{A string specifying the error correction method to be used. Possible values are "Flip", "Prune", or "None".}

\item{testReps}{An integer specifying the number of test repetitions for model evaluation.}

\item{Data}{A data frame containing the dataset to use for training and testing. If \code{NULL}, the function will attempt to fetch and format the data from the database using \code{get_Data_formatted_for_ml_and_best.m} function.}
}
\value{
A \code{ggplot} object representing the histogram of predicted probabilities for the \code{LIVER} variable across test repetitions.
}
\description{
This function performs model building and prediction using a random forest algorithm. It iterates over multiple test repetitions, training the model on the training data and predicting on the test data. After predictions are made, a histogram plot is generated to visualize the distribution of predicted probabilities for the outcome variable (\code{LIVER}).
}
\details{
The function works as follows:
\itemize{
\item If \code{Data} is \code{NULL}, the function fetches the data and the best model configuration by calling the \code{get_Data_formatted_for_ml_and_best.m} function.
\item The dataset is divided into training and test sets for each repetition (\code{testReps}).
\item If \code{Undersample} is enabled, undersampling is applied to balance the dataset.
\item A random forest model is trained on the training data and predictions are made on the test data.
\item The predictions are averaged over the test repetitions and a histogram is plotted to visualize the distribution of predicted probabilities for \code{LIVER}.
}
}
\examples{
\dontrun{
# Example function call
get_prediction_plot(
  path_db = "path_to_db",
  rat_studies = FALSE,
  reps = 10,
  holdback = 0.2,
  Undersample = TRUE,
  hyperparameter_tuning = FALSE,
  error_correction_method = "Flip",
  testReps = 5
)
}

}
