% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_ml_data_and_tuned_hyperparameters.R
\name{get_ml_data_and_tuned_hyperparameters}
\alias{get_ml_data_and_tuned_hyperparameters}
\title{Get Random Forest Data and Tuned Hyperparameters}
\usage{
get_ml_data_and_tuned_hyperparameters(
  column_harmonized_df,
  studyid_metadata,
  Impute = FALSE,
  Round = FALSE,
  reps,
  holdback,
  Undersample = FALSE,
  hyperparameter_tuning = FALSE,
  error_correction_method = "None"
)
}
\arguments{
\item{studyid_metadata}{data.frame. Metadata containing \code{STUDYID} and \code{Target_Organ}.}

\item{Impute}{logical. Indicates whether to impute missing values in the dataset using random forest imputation. Default is \code{FALSE}.}

\item{Round}{logical. Specifies whether to round specific numerical columns according to predefined rules. Default is \code{FALSE}.}

\item{reps}{integer. Number of repetitions for cross-validation. A value of \code{0} skips repetition.}

\item{holdback}{numeric. Fraction of data to hold back for testing. A value of \code{1} performs leave-one-out cross-validation.}

\item{Undersample}{logical. Indicates whether to undersample the training data to balance the target classes. Default is \code{FALSE}.}

\item{hyperparameter_tuning}{logical. Specifies whether to perform hyperparameter tuning for the random forest model. Default is \code{FALSE}.}

\item{error_correction_method}{character. Specifies the method for error correction. Can be \code{"Flip"}, \code{"Prune"}, or \code{None}. Default is \code{None}.}

\item{Data}{data.frame. Input data frame containing scores, typically named \code{scores_df}.
First column is "STUDYID", followed by columns with score values.}
}
\value{
A list containing:
\describe{
\item{rfData}{The final processed data after preprocessing and error correction.}
\item{best.m}{The best \code{mtry} hyperparameter determined for the random forest model.}
}
}
\description{
The \code{get_ml_data_and_tuned_hyperparameters} function processes input data and metadata to prepare data for
random forest analysis. It includes steps for data preprocessing, optional imputation, rounding,
error correction, and hyperparameter tuning.
}
\examples{
\dontrun{
# Example usage:
Data <- scores_df
studyid_metadata <- read.csv("path/to/study_metadata.csv")
result <- get_ml_data_and_tuned_hyperparameters(
  Data = Data,
  studyid_metadata = studyid_metadata,
  Impute = TRUE,
  Round = TRUE,
  reps = 10,
  holdback = 0.75,
  Undersample = TRUE,
  hyperparameter_tuning = TRUE,
  error_correction_method = "Flip"
)
rfData <- result$rfData
best_mtry <- result$best.m
}
}
